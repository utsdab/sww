// Copyright (C) 1997-2001 Alias|Wavefront,
// a division of Silicon Graphics Limited.
//
// The information in this file is provided for the exclusive use of the
// licensees of Alias|Wavefront.  Such users have the right to use, modify,
// and incorporate this code into other products for purposes authorized
// by the Alias|Wavefront license agreement, without fee.
//
// ALIAS|WAVEFRONT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
// INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
// EVENT SHALL ALIAS|WAVEFRONT BE LIABLE FOR ANY SPECIAL, INDIRECT OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
// DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
// PERFORMANCE OF THIS SOFTWARE.
//
//-----------------------------------------------------------------//
//-----------------------------------------------------------------//
//	SCRIPT:	jsCreateCreature.mel
//	AUTHOR:	Jason Schleifer
//			oy_vay@hotmail.com
//	DATE:	July 21, 2001	
//
//	DESCRIPTION:	This script can be used to create a creature locator.
//
//-----------------------------------------------------------------//
//-----------------------------------------------------------------//

global proc string jsCreateCreature ( string $name )
{
	string $result = "";

	// create a creature by the name of $name
	if ($name == "")
		$name = "creature";
	
	$shape = `createNode locator `;

	$parent = `listRelatives -p $shape`;
	$result = `rename ($parent[0]) $name`;

	$shapes = `listRelatives -s $result`;
	addAttr -ln "jsCreature" -dt "string" $shapes[0];

	return ($result);
}
